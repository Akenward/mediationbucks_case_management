<?php

interface MediationTaxonomyLoader {
	
  public function setUpVocabs();
  
  public function removeVocabs();
  
}

/**
 * A class that loads taxonomy values for case management.
 * The function setUpVocabs sets up the case management vocbularies
 * and constituent terms. 
 * The data is provided in an array generated by case_management_vocabulary_load().
 * There is also a function to remove the vocabularies.
 */
class CaseManagementTaxonomyLoader implements MediationTaxonomyLoader {
  // protected variable for the vocabulary object
  protected $taxonomy_handler;
  // protected variable for the vocabulary vid
  function __construct() {
  	
  }
  
  public function setUpVocabs(){
  	//module_load_include('inc', 'case_management', 'includes/mediation_taxonomy_handler');
  	foreach ($this->case_management_vocabulary_load() as $vocab_name => $vocab_data) {
  	  $this->taxonomy_handler = mediation_taxonomy_handler_factory($vocab_name);
	  if (isset($vocab_data['description'])){
	  	$this->taxonomy_handler->setDescription($vocab_data['description']);
	  }
	  if (isset($vocab_data['terms']) && !empty($vocab_data['terms'])) {
	  	foreach ($vocab_data['terms'] as $key => $term_data) {
	  	  $this->taxonomy_handler->setTerm(
	  	    $term_data['name'],
			(isset($term_data['description'])) ? $term_data['description'] : NULL,
			(isset($term_data['weight'])) ? $term_data['weight'] : NULL);
	    }
	  }
  	}
  }
  
  public function removeVocabs(){
  	//module_load_include('inc', 'case_management', 'includes/mediation_taxonomy_handler');
  	foreach ($this->case_management_vocabulary_load() as $vocab_name => $vocab_data) {
  	  $this->taxonomy_handler = mediation_taxonomy_handler_factory($vocab_name);
	  $this->taxonomy_handler->deleteVocab();
    }
  }

  function case_management_vocabulary_load() {
    return array(
      'Case status' => array(
        'description' => 'Possible status conditions for an actual or potential mediation case',
        'terms' => array( 
          array(
            'name' => 'Referred',
            'description' => 'Notified by a partner organisation as a potential mediation case',
            'weight' => 0,
          ),
          array(
            'name' => 'Open',
            'description' => 'Set in progress as a Mediation Bucks case',
            'weight' => 1,
          ),
          array(
            'name' => 'On hold',
            'description' => 'A case in abeyance because no further action can be taken at present',
            'weight' => 2,
          ),
          array(
            'name' => 'Closed',
            'description' => 'A case with all required actions complete or which cannot be taken further',
            'weight' => 3,
          ),
          array(
            'name' => 'Archived',
            'description' => 'A closed case transferred to long term storage',
            'weight' => 4,
          ),
        ),
	  ),
	  'Meeting duration' => array(
        'description' => 'Options for the duration of a meeting',
        'terms' => array( 
          array(
            'name' => '30 mins',
            'weight' => 0,
          ),
          array(
            'name' => '45 mins',
            'weight' => 1,
          ),
          array(
          'name' => '1 hour',
          'weight' => 2,
          ),
          array(
            'name' => '1 hour 15 mins',
            'weight' => 3,
          ),
          array(
            'name' => '1 hour 15 mins',
            'weight' => 4,
          ),
          array(
            'name' => '1 hour 30 mins',
            'weight' => 5,
          ),
          array(
            'name' => '1 hour 45 mins',
            'weight' => 6,
          ),
          array(
            'name' => '2 hours',
            'weight' => 7,
          ),
        ),
      ),
      'Meeting types' => array(
        'description' => 'Types of mediation casework meeting',
        'terms' => array(
          array(
            'name' => 'Home visit',
            'weight' => 0,
          ),
          array(
            'name' => 'Joint meeting',
            'weight' => 1,
          ),
          array(
            'name' => 'Shuttle meeting',
            'weight' => 2,
          ),
        ),
	  ),
    );
  }
}

